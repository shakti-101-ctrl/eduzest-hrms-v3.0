// <auto-generated />
using System;
using Eduzest.HRMS.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eduzest.HRMS.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230812194403_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Admin.Registration", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("UserId");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Branch", b =>
                {
                    b.Property<Guid?>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("BranchName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("branchname");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("mobilenumber");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("state");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Department", b =>
                {
                    b.Property<Guid?>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("deptid");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("department");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("DeptId");

                    b.HasIndex("BranchId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Designation", b =>
                {
                    b.Property<Guid>("Desigid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Designationname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Desigid");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", b =>
                {
                    b.Property<string>("Employeecode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("employeecode");

                    b.Property<string>("Bankaddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("bankaddress");

                    b.Property<string>("Bankname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bankname");

                    b.Property<string>("Bloodgroup")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bloodgroup");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("branchId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<DateTime?>("Dateofbirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateofbirth");

                    b.Property<DateTime?>("Dateofjoin")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentDeptId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("departmentdeptid");

                    b.Property<Guid?>("Desigid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("desigid");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Employeename")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeename");

                    b.Property<string>("Expdetails")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("expdetails");

                    b.Property<string>("Facebook")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("facebook");

                    b.Property<string>("Fathername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fathername");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("Ifsccode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ifsccode");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("linkedin");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mobile");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Permanentaddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("permanentaddress");

                    b.Property<string>("Presentaddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("presentaddress");

                    b.Property<string>("Profilepicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profilepicture");

                    b.Property<string>("Qualification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qualification");

                    b.Property<string>("Religion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("religion");

                    b.Property<bool?>("Skipbankdetails")
                        .HasColumnType("bit")
                        .HasColumnName("skipbankdetails");

                    b.Property<int?>("Totalexp")
                        .HasColumnType("int");

                    b.Property<string>("Twitter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("twitter");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Employeecode");

                    b.HasIndex("BranchId");

                    b.HasIndex("DepartmentDeptId");

                    b.HasIndex("Desigid");

                    b.ToTable("EmployeeDetails");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.Allowances", b =>
                {
                    b.Property<Guid>("Allowanceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("allowanceid");

                    b.Property<string>("Allowancename")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("allowancename");

                    b.Property<float?>("Ammount")
                        .HasColumnType("real")
                        .HasColumnName("ammount");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<Guid?>("Salarytemplate")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("salarytemplate");

                    b.Property<Guid?>("SalarytemplateNavigationSalarytemplateid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Allowanceid");

                    b.HasIndex("SalarytemplateNavigationSalarytemplateid");

                    b.ToTable("Allowances");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.Deduction", b =>
                {
                    b.Property<Guid>("Deductionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("deductionid");

                    b.Property<float?>("Ammount")
                        .HasColumnType("real")
                        .HasColumnName("ammount");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("Deductionname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("deductionname");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<Guid?>("Salarytemplateid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("salarytemplateid");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Deductionid");

                    b.HasIndex("Salarytemplateid");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.ExperienceDetail", b =>
                {
                    b.Property<Guid>("Experienceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("experienceid");

                    b.Property<string>("Authorizedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("authorizedby");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("EmpCodeEmployeeCodeNavigationEmployeecode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employeeCode");

                    b.Property<DateTime?>("Fromdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fromdate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<DateTime?>("Todate")
                        .HasColumnType("datetime2")
                        .HasColumnName("todate");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Experienceid");

                    b.HasIndex("EmpCodeEmployeeCodeNavigationEmployeecode");

                    b.ToTable("ExperienceDetails");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.RelievingDetail", b =>
                {
                    b.Property<Guid>("Relievingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("relievingid");

                    b.Property<string>("Authorizedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("authorizedby");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<DateTime?>("Dateofrelease")
                        .HasColumnType("datetime2")
                        .HasColumnName("dateofrelease");

                    b.Property<string>("EmpCodeEmployeeCodeNavigationEmployeecode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EmployeeCode");

                    b.Property<DateTime?>("Fromdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("fromdate");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<DateTime?>("Todate")
                        .HasColumnType("datetime2")
                        .HasColumnName("todate");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Relievingid");

                    b.HasIndex("EmpCodeEmployeeCodeNavigationEmployeecode");

                    b.ToTable("RelievingDetails");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.SalaryAssignment", b =>
                {
                    b.Property<Guid>("Assignid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("assignid");

                    b.Property<string>("Accountnumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("accountnumber");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<string>("Employeecode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("employeecode");

                    b.Property<string>("EmployeecodeNavigationEmployeecode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<float?>("Netsalary")
                        .HasColumnType("real")
                        .HasColumnName("netsalary");

                    b.Property<float?>("Overtimeamount")
                        .HasColumnType("real")
                        .HasColumnName("overtimeamount");

                    b.Property<int?>("Overtimetotalhour")
                        .HasColumnType("int")
                        .HasColumnName("overtimetotalhour");

                    b.Property<string>("Payvia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payvia");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("remark");

                    b.Property<float?>("Totalallowance")
                        .HasColumnType("real")
                        .HasColumnName("totalallowance");

                    b.Property<float?>("Totaldeduction")
                        .HasColumnType("real")
                        .HasColumnName("totaldeduction");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Assignid");

                    b.HasIndex("EmployeecodeNavigationEmployeecode");

                    b.ToTable("SalaryAssignments");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.SalaryTemplate", b =>
                {
                    b.Property<Guid>("Salarytemplateid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("salarytemplateid");

                    b.Property<float?>("Basicsalary")
                        .HasColumnType("real")
                        .HasColumnName("basicsalary");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdon");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<float?>("Netsalary")
                        .HasColumnType("real")
                        .HasColumnName("netsalary");

                    b.Property<float?>("Overtimerate")
                        .HasColumnType("real")
                        .HasColumnName("overtimerate");

                    b.Property<string>("Salarygrade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("salarygrade");

                    b.Property<float?>("Totalallowances")
                        .HasColumnType("real")
                        .HasColumnName("totalallowances");

                    b.Property<float?>("Totaldeduction")
                        .HasColumnType("real")
                        .HasColumnName("totaldeduction");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updatedby");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedon");

                    b.HasKey("Salarytemplateid");

                    b.ToTable("SalaryTemplates");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Log.LogDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasMaxLength(200)
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("message");

                    b.Property<string>("StackTrace")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("stacktrace");

                    b.Property<string>("TargetSite")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("targetsite");

                    b.HasKey("Id");

                    b.ToTable("LogDetails");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Department", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Branch", "Branch")
                        .WithMany("Departments")
                        .HasForeignKey("BranchId");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Designation", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Department", "DepartmentDept")
                        .WithMany("Designations")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Branch");

                    b.Navigation("DepartmentDept");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Department", "DepartmentDept")
                        .WithMany()
                        .HasForeignKey("DepartmentDeptId");

                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.Designation", "Desig")
                        .WithMany("EmployeeDetails")
                        .HasForeignKey("Desigid");

                    b.Navigation("Branch");

                    b.Navigation("DepartmentDept");

                    b.Navigation("Desig");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.Allowances", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Hrms.SalaryTemplate", "SalarytemplateNavigation")
                        .WithMany("Allowances")
                        .HasForeignKey("SalarytemplateNavigationSalarytemplateid");

                    b.Navigation("SalarytemplateNavigation");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.Deduction", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Hrms.SalaryTemplate", "Salarytemplate")
                        .WithMany("Deductions")
                        .HasForeignKey("Salarytemplateid");

                    b.Navigation("Salarytemplate");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.ExperienceDetail", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", "EmpCodeEmployeeCodeNavigation")
                        .WithMany("ExperienceDetails")
                        .HasForeignKey("EmpCodeEmployeeCodeNavigationEmployeecode");

                    b.Navigation("EmpCodeEmployeeCodeNavigation");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.RelievingDetail", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", "EmpCodeEmployeeCodeNavigation")
                        .WithMany("RelievingDetails")
                        .HasForeignKey("EmpCodeEmployeeCodeNavigationEmployeecode");

                    b.Navigation("EmpCodeEmployeeCodeNavigation");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.SalaryAssignment", b =>
                {
                    b.HasOne("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", "EmployeecodeNavigation")
                        .WithMany("SalaryAssignments")
                        .HasForeignKey("EmployeecodeNavigationEmployeecode");

                    b.Navigation("EmployeecodeNavigation");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Branch", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Department", b =>
                {
                    b.Navigation("Designations");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.Designation", b =>
                {
                    b.Navigation("EmployeeDetails");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Employee.EmployeeDetails", b =>
                {
                    b.Navigation("ExperienceDetails");

                    b.Navigation("RelievingDetails");

                    b.Navigation("SalaryAssignments");
                });

            modelBuilder.Entity("Eduzest.HRMS.Entities.Entities.Hrms.SalaryTemplate", b =>
                {
                    b.Navigation("Allowances");

                    b.Navigation("Deductions");
                });
#pragma warning restore 612, 618
        }
    }
}
